name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux GCC 10 Debug/Coverage
            os: ubuntu-latest
            env: BUILD_TYPE=Debug EXTRA_CMAKE=-DCOVERAGE=On GCOV=gcov-10 CC=gcc-10 CXX=g++-10
          - name: Linux GCC 10 Release
            os: ubuntu-latest
            env: BUILD_TYPE=Release LTO=On CC=gcc-10 CXX=g++-10
          - name: Linux GCC 9 Release
            os: ubuntu-latest
            env: BUILD_TYPE=Release LTO=On CC=gcc-9 CXX=g++-9
          - name: Linux Clang 12 Release
            os: ubuntu-latest
            env: BUILD_TYPE=Release LTO=On CC=clang-12 CXX=clang++-12
          - name: Linux Clang 11 Release
            os: ubuntu-latest
            env: BUILD_TYPE=Release LTO=On CC=clang-11 CXX=clang++-11
          - name: Linux Clang 10 Release
            os: ubuntu-latest
            env: BUILD_TYPE=Release LTO=On CC=clang-10 CXX=clang++-10
          - name: OSX GCC 11 Release
            os: macos-latest
            env: BUILD_TYPE=Release CC=gcc-11 CXX=g++-11
          - name: OSX Clang 12 Release
            os: macos-latest
            env: BUILD_TYPE=Release
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: CMake Build
      run: |
        eval ${{ matrix.env }}
        export CC CXX
        mkdir out
        cd out
        cmake -Wno-dev -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ${EXTRA_CMAKE} ..
        cmake --build . -- -j2
        ctest --output-on-failure -D ExperimentalBuild -j2
        ctest --output-on-failure -D ExperimentalTest -j2
        [[ -z "${GCOV}" ]] || find . -type f -name '*.gcno' -exec ${GCOV} -pabcfu '{}' +
    - name: Codecov Upload
      if: contains(matrix.name, 'Coverage')
      uses: codecov/codecov-action@v2
