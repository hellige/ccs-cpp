language: cpp
matrix:
  include:
    - os: linux
      dist: xenial
      env: BUILD_TYPE=Debug MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
    - os: linux
      dist: xenial
      env: BUILD_TYPE=Release EXTRA_CMAKE=-DCOVERAGE=Off LTO=On MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
#    - os: linux
#      dist: xenial
#      compiler: clang
#      env: BUILD_TYPE=Debug
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-8
#    - os: linux
#      dist: xenial
#      compiler: clang
#      env: BUILD_TYPE=Release STATIC=On
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-8
    - os: osx
      osx_image: xcode10.1
      env: BUILD_TYPE=Release EXTRA_CMAKE=-DCOVERAGE=Off MATRIX_EVAL="brew link --overwrite gcc && CC=gcc-8 && CXX=g++-8"
# we don't build with clang on osx yet, at least not until 10.14, and probably not even then.
#    - os: osx
#      osx_image: xcode10.1
#      env: BUILD_TYPE=Release
before_install:
    - eval "${MATRIX_EVAL}"
script:
  - mkdir out
  - cd out
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCOVERAGE=On ${EXTRA_CMAKE} ..
  - cmake --build . -- -j2
  - ctest --output-on-failure -D ExperimentalBuild -j2
  - ctest --output-on-failure -D ExperimentalTest -j2
  - bash <(curl -s https://codecov.io/bash) -x gcov-8

